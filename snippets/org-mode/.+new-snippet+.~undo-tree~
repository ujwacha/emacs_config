(undo-tree-save-format-version . 1)
"91a6ff981bbc770e6f0b7806eb7063b145d9441c"
[nil nil nil nil (25561 19331 352917 143000) 0 nil]
([nil nil ((apply yas--snippet-revive 1 47 #s(yas--snippet nil (#s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #8) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #7 #s(yas--exit 47 nil) nil))) #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) #s(yas--exit 47 nil) 0 nil #s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #7) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #8) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #7 #s(yas--exit 47 nil) nil))) #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) #s(yas--exit 47 nil) 0 nil #s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #7) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) nil nil)) (1 . 47)) nil (25561 19331 352915 751000) 0 nil])
([nil nil ((41 . 49) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -41) (undo-tree-id9 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -42) (undo-tree-id10 . -1) 43 (39 . 43) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -39) (undo-tree-id11 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -40) (undo-tree-id12 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -41) (undo-tree-id13 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -42) (undo-tree-id14 . -1) 43 (33 . 43)) nil (25561 19331 352913 181000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t face font-lock-comment-face)) . -59) (undo-tree-id7 . -1) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -60) (undo-tree-id8 . -1) 61 (59 . 61) (57 . 59)) nil (25561 19331 352905 30000) 0 nil])
([nil nil ((88 . 90) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -88) (undo-tree-id2 . -1) 89 (80 . 89) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -80) (undo-tree-id3 . -1) 81 (80 . 81) (79 . 81) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face font-lock-comment-face))) . -79) (undo-tree-id4 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face font-lock-comment-face))) . 80) (70 . 81) (66 . 70) (65 . 66) (#("
" 0 1 (fontified t)) . -65) (undo-tree-id5 . -1) (#("=" 0 1 (fontified t)) . -66) (undo-tree-id6 . -1) 67 (66 . 67) (64 . 66)) nil (25561 19331 352900 781000) 0 nil])
([nil nil ((92 . 94)) nil (25561 19331 352893 267000) 0 nil])
([nil nil ((100 . 104) (95 . 100) (#("+" 0 1 (fontified t)) . -95) (undo-tree-id1 . -1) 96 (95 . 96) (94 . 95)) nil (25561 19331 352891 898000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 36) (undo-tree-id0 . 1) (t 25561 19188 162956 12000)) nil (25561 19331 352887 837000) 0 nil])
([nil nil ((36 . 37)) nil (25561 19331 352870 465000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face font-lock-warning-face)) . 80)) nil (25561 19331 352869 224000) 0 nil])
([nil nil ((80 . 81)) nil (25561 19331 352867 699000) 0 nil])
([nil current ((93 . 94) (#("1" 0 1 (fontified t face font-lock-string-face)) . 93)) nil (25561 19331 352861 846000) 0 nil])
nil
